// +build !ignore_autogenerated

/*
Copyright 2017 Gustavo Hoirisch.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file was autogenerated by conversion-gen. Do not edit it manually!

package v1alpha1

import (
	ecr "github.com/gugahoi/memento/pkg/apis/ecr"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(scheme *runtime.Scheme) error {
	return scheme.AddGeneratedConversionFuncs(
		Convert_v1alpha1_ECR_To_ecr_ECR,
		Convert_ecr_ECR_To_v1alpha1_ECR,
		Convert_v1alpha1_ECRList_To_ecr_ECRList,
		Convert_ecr_ECRList_To_v1alpha1_ECRList,
		Convert_v1alpha1_ECRSpec_To_ecr_ECRSpec,
		Convert_ecr_ECRSpec_To_v1alpha1_ECRSpec,
		Convert_v1alpha1_ECRStatus_To_ecr_ECRStatus,
		Convert_ecr_ECRStatus_To_v1alpha1_ECRStatus,
	)
}

func autoConvert_v1alpha1_ECR_To_ecr_ECR(in *ECR, out *ecr.ECR, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ECRSpec_To_ecr_ECRSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ECRStatus_To_ecr_ECRStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ECR_To_ecr_ECR is an autogenerated conversion function.
func Convert_v1alpha1_ECR_To_ecr_ECR(in *ECR, out *ecr.ECR, s conversion.Scope) error {
	return autoConvert_v1alpha1_ECR_To_ecr_ECR(in, out, s)
}

func autoConvert_ecr_ECR_To_v1alpha1_ECR(in *ecr.ECR, out *ECR, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_ecr_ECRSpec_To_v1alpha1_ECRSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_ecr_ECRStatus_To_v1alpha1_ECRStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_ecr_ECR_To_v1alpha1_ECR is an autogenerated conversion function.
func Convert_ecr_ECR_To_v1alpha1_ECR(in *ecr.ECR, out *ECR, s conversion.Scope) error {
	return autoConvert_ecr_ECR_To_v1alpha1_ECR(in, out, s)
}

func autoConvert_v1alpha1_ECRList_To_ecr_ECRList(in *ECRList, out *ecr.ECRList, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ecr.ECR, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_ECR_To_ecr_ECR(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ECRList_To_ecr_ECRList is an autogenerated conversion function.
func Convert_v1alpha1_ECRList_To_ecr_ECRList(in *ECRList, out *ecr.ECRList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ECRList_To_ecr_ECRList(in, out, s)
}

func autoConvert_ecr_ECRList_To_v1alpha1_ECRList(in *ecr.ECRList, out *ECRList, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ECR, len(*in))
		for i := range *in {
			if err := Convert_ecr_ECR_To_v1alpha1_ECR(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_ecr_ECRList_To_v1alpha1_ECRList is an autogenerated conversion function.
func Convert_ecr_ECRList_To_v1alpha1_ECRList(in *ecr.ECRList, out *ECRList, s conversion.Scope) error {
	return autoConvert_ecr_ECRList_To_v1alpha1_ECRList(in, out, s)
}

func autoConvert_v1alpha1_ECRSpec_To_ecr_ECRSpec(in *ECRSpec, out *ecr.ECRSpec, s conversion.Scope) error {
	// WARNING: in.Policy requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_ecr_ECRSpec_To_v1alpha1_ECRSpec(in *ecr.ECRSpec, out *ECRSpec, s conversion.Scope) error {
	return nil
}

// Convert_ecr_ECRSpec_To_v1alpha1_ECRSpec is an autogenerated conversion function.
func Convert_ecr_ECRSpec_To_v1alpha1_ECRSpec(in *ecr.ECRSpec, out *ECRSpec, s conversion.Scope) error {
	return autoConvert_ecr_ECRSpec_To_v1alpha1_ECRSpec(in, out, s)
}

func autoConvert_v1alpha1_ECRStatus_To_ecr_ECRStatus(in *ECRStatus, out *ecr.ECRStatus, s conversion.Scope) error {
	out.ARN = in.ARN
	return nil
}

// Convert_v1alpha1_ECRStatus_To_ecr_ECRStatus is an autogenerated conversion function.
func Convert_v1alpha1_ECRStatus_To_ecr_ECRStatus(in *ECRStatus, out *ecr.ECRStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ECRStatus_To_ecr_ECRStatus(in, out, s)
}

func autoConvert_ecr_ECRStatus_To_v1alpha1_ECRStatus(in *ecr.ECRStatus, out *ECRStatus, s conversion.Scope) error {
	out.ARN = in.ARN
	return nil
}

// Convert_ecr_ECRStatus_To_v1alpha1_ECRStatus is an autogenerated conversion function.
func Convert_ecr_ECRStatus_To_v1alpha1_ECRStatus(in *ecr.ECRStatus, out *ECRStatus, s conversion.Scope) error {
	return autoConvert_ecr_ECRStatus_To_v1alpha1_ECRStatus(in, out, s)
}
